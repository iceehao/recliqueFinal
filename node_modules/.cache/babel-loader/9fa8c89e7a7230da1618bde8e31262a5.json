{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\iceha\\\\Desktop\\\\RecliqueFinalVersion\\\\src\\\\Questionare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport { Button, Select, Input, Form, Radio } from \"antd\";\nimport Swal from \"sweetalert2\";\n\nconst Questionare = props => {\n  _s();\n\n  const {\n    Option\n  } = Select;\n  const [form] = Form.useForm();\n\n  function handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  const onFinish = values => {\n    if (values.Maintype === \"cash\") {\n      var cash = props.answer[0].entries; // set flag value to check conditions for sweetalert\n\n      var check = false;\n      cash.map(ans => {\n        // if condition to check selected answers with correct answers\n        if (ans.when === values.when && ans.type === values.type && ans[values.drCr] == values.drCrValue) {\n          check = true;\n        }\n      }); // if condition to checked correct answer then show sweetalert according to wrong/right anwers\n\n      if (check === true) {\n        Swal.fire({\n          title: \"Your answer is correct!\",\n          text: \"Do you want to continue\",\n          icon: \"success\",\n          confirmButtonText: \"Ok\"\n        }).then(() => {\n          console.log(\"Success:\", values);\n          form.resetFields();\n          props.onFinish(props.index);\n        });\n      } else {\n        Swal.fire({\n          title: \"Your answer is incorrect!\",\n          text: \"Do you want to continue\",\n          icon: \"error\",\n          confirmButtonText: \"Ok\"\n        });\n      }\n    } //  else condition to check correct answers if user select accural type\n    else {\n        var accural = props.answer[1].entries;\n        var ch = false;\n        accural.map(ans => {\n          // if condition to check selected answers with correct answers\n          if (ans.when === values.when && ans.type === values.type && ans[values.drCr] == values.drCrValue) {\n            ch = true;\n          }\n        });\n\n        if (ch === true) {\n          // if condition to checked correct answer then show sweetalert according to wrong/right anwers\n          Swal.fire({\n            title: \"Your answer is correct!\",\n            text: \"Do you want to continue\",\n            icon: \"success\",\n            confirmButtonText: \"Ok\"\n          }).then(() => {\n            console.log(\"Success:\", values); // reset form\n\n            form.resetFields(); // call finish function to move on to next step\n\n            props.onFinish(props.index);\n          });\n        } // if slected answer is weong show worng answer alert\n        else {\n            Swal.fire({\n              title: \"Your answer is wrong!\",\n              text: \"Do you want to continue\",\n              icon: \"error\",\n              confirmButtonText: \"Ok\"\n            });\n          }\n      }\n  }; // failed function in case of user input invalid fields\n\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    /*#__PURE__*/\n    // main div starts from here\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        name: \"basic\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Type \", \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          initialValue: \"cash\",\n          name: \"Maintype\",\n          children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n            buttonStyle: \"solid\",\n            children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"cash\",\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"accural\",\n              children: \"Accural\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Day\",\n          name: \"when\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"mm/dd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Type\",\n          name: \"type\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select type\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"cash\",\n              children: \"cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"revenue\",\n              children: \"revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"receivable\",\n              children: \"receivable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"deferred\",\n              children: \"deferred\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"contra\",\n              children: \"contra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"system-credit\",\n              children: \"system-credit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Dr/Cr\",\n          children: /*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"drCr\",\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: \"Select dr/cr\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  width: \"50%\"\n                },\n                placeholder: \"Dr/Cr\",\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"Dr\",\n                  children: \"Dr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"Cr\",\n                  children: \"Cr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"drCrValue\",\n              noStyle: true,\n              onChange: handleChange,\n              rules: [{\n                required: true,\n                message: \"\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  width: \"50%\"\n                },\n                placeholder: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: props.index == props.length - 1 ? \" Finish\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Questionare, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Questionare;\nexport default Questionare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionare\");","map":{"version":3,"sources":["C:/Users/iceha/Desktop/RecliqueFinalVersion/src/Questionare.js"],"names":["React","useState","Button","Select","Input","Form","Radio","Swal","Questionare","props","Option","form","useForm","handleChange","value","console","log","onFinish","values","Maintype","cash","answer","entries","check","map","ans","when","type","drCr","drCrValue","fire","title","text","icon","confirmButtonText","then","resetFields","index","accural","ch","onFinishFailed","errorInfo","description","remember","required","message","width","offset","span","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\r\nimport { Button, Select, Input, Form, Radio } from \"antd\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Questionare = (props) => {\r\n  const { Option } = Select;\r\n  const [form] = Form.useForm();\r\n\r\n  function handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    if (values.Maintype === \"cash\") {\r\n      var cash = props.answer[0].entries;\r\n      // set flag value to check conditions for sweetalert\r\n      var check = false;\r\n      cash.map((ans) => {\r\n        // if condition to check selected answers with correct answers\r\n        if (\r\n          ans.when === values.when &&\r\n          ans.type === values.type &&\r\n          ans[values.drCr] == values.drCrValue\r\n        ) {\r\n          check = true;\r\n        }\r\n      });\r\n      // if condition to checked correct answer then show sweetalert according to wrong/right anwers\r\n      if (check === true) {\r\n        Swal.fire({\r\n          title: \"Your answer is correct!\",\r\n          text: \"Do you want to continue\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"Ok\",\r\n        }).then(() => {\r\n          console.log(\"Success:\", values);\r\n          form.resetFields();\r\n          props.onFinish(props.index);\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Your answer is incorrect!\",\r\n          text: \"Do you want to continue\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"Ok\",\r\n        });\r\n      }\r\n    }\r\n    //  else condition to check correct answers if user select accural type\r\n    else {\r\n      var accural = props.answer[1].entries;\r\n      var ch = false;\r\n      accural.map((ans) => {\r\n        // if condition to check selected answers with correct answers\r\n        if (\r\n          ans.when === values.when &&\r\n          ans.type === values.type &&\r\n          ans[values.drCr] == values.drCrValue\r\n        ) {\r\n          ch = true;\r\n        }\r\n      });\r\n      if (ch === true) {\r\n        // if condition to checked correct answer then show sweetalert according to wrong/right anwers\r\n        Swal.fire({\r\n          title: \"Your answer is correct!\",\r\n          text: \"Do you want to continue\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"Ok\",\r\n        }).then(() => {\r\n          console.log(\"Success:\", values);\r\n          // reset form\r\n          form.resetFields();\r\n          // call finish function to move on to next step\r\n          props.onFinish(props.index);\r\n        });\r\n      }\r\n      // if slected answer is weong show worng answer alert\r\n      else {\r\n        Swal.fire({\r\n          title: \"Your answer is wrong!\",\r\n          text: \"Do you want to continue\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"Ok\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // failed function in case of user input invalid fields\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    // main div starts from here\r\n    <div>\r\n      <h2>Question</h2>\r\n      <p>{props.description}</p> {/* question description fetched from api */}\r\n      <Form\r\n        form={form}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h2>Type {\"\"}</h2>\r\n        <Form.Item initialValue=\"cash\" name=\"Maintype\">\r\n          <Radio.Group buttonStyle=\"solid\">\r\n            <Radio.Button value=\"cash\">Cash</Radio.Button>\r\n            <Radio.Button value=\"accural\">Accural</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Day\" name=\"when\">\r\n          <Input placeholder=\"mm/dd\" />\r\n        </Form.Item>\r\n        {/* type dropdown */}\r\n        <Form.Item label=\"Type\" name=\"type\">\r\n          <Select placeholder=\"Select type\" onChange={handleChange}>\r\n            <Option value=\"cash\">cash</Option>\r\n            <Option value=\"revenue\">revenue</Option>\r\n            <Option value=\"receivable\">receivable</Option>\r\n            <Option value=\"deferred\">deferred</Option>\r\n            <Option value=\"contra\">contra</Option>\r\n            <Option value=\"system-credit\">system-credit</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Dr/Cr\">\r\n          <Input.Group compact>\r\n            <Form.Item\r\n              name=\"drCr\"\r\n              noStyle\r\n              rules={[{ required: true, message: \"Select dr/cr\" }]}\r\n            >\r\n              <Select\r\n                style={{ width: \"50%\" }}\r\n                placeholder=\"Dr/Cr\"\r\n                onChange={handleChange}\r\n              >\r\n                <Option value=\"Dr\">Dr</Option>\r\n                <Option value=\"Cr\">Cr</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"drCrValue\"\r\n              noStyle\r\n              onChange={handleChange}\r\n              rules={[{ required: true, message: \"\" }]}\r\n            >\r\n              <Input style={{ width: \"50%\" }} placeholder=\"0\" />\r\n            </Form.Item>\r\n          </Input.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button className=\"button\" type=\"primary\" htmlType=\"submit\">\r\n            {/*  check if last index show finish text otherwise display submit text on button */}\r\n            {props.index == props.length - 1 ? \" Finish\" : \"Submit\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questionare;\r\n"]},"metadata":{},"sourceType":"module"}